{"uid": "L3", "total": "20", "questions": ["{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 0, \"marks\": \"2\", \"qText\": \"Define a function <code>areaRightTriangle</code> which accepts two parameters <code>height</code> and <code>base</code> and returns the area of the triangle. \\nCall the function with height as 10 and base as 20 and save the result in a variable called <code>areaTriangle</code>\", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Write your code below.\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 1, \"marks\": \"1\", \"qText\": \"Select all the function calls that are correct for the following function definition.\\n\\n```python\\ndef sumAll(first,second=0,third=0):\\n    return first+second+third\\n```\", \"qType\": \"2\", \"qImageDetails\": null, \"results\": {\"options\": [\"sumAll()\", \"sumAll(1)\", \"sumAll(1,second=5)\", \"sumAll(1,third=6)\", \"sumAll(1,2,3)\"], \"choice\": null}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 2, \"marks\": \"3\", \"qText\": \"Write a function <code>weatherMessage</code> that accepts a list of temperatures (in fahrenheit), then print a message based on the average temperature.<br> The message should be <br>\\n\\n'Warm' (if average temperature greater than or equal to 70 and less than 90)<br>\\n'Hot' (greater than or equal to 90)<br>\\n'Pleasant' (greater than or equal to 45 and less than 70)<br>\\n'Cold' (greater than or equal to 20 and less than 45)<br>\\n'Freezing' (Less than 20).<br>\\nAn example<br>\\nA call to weatherMessage([56,67,75]) should print the message 'Pleasant'\", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Write your code below.\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 3, \"marks\": \"2\", \"qText\": \"Modify the given program (if it has any errors) to store all the numbers from 100 to 1 (100,99..1) to a list named numbers. <br>\\nThe code snippet is already provided. \", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"numbers = []\\nidx = 100\\nwhile idx!=0:\\n    numbers.append(idx)\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 4, \"marks\": \"5\", \"qText\": \"Write a program to read the file seattle_temperatures.csv in the seattle_temperatures folder in largedatasets folder using the open() function and store the Date and the highest temperature to a list called highest.<br>\\nFor example if the highest temperature was 120 and it was for the date 1/1/1948, then highest should contain ['1/1/1948',120]\", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Write your code below.\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 5, \"marks\": \"5\", \"qText\": \"Write a program to read the file us_cities_top1k.csv from the folder us_cities_top1k in largedatasets folder. <br>\\nCreate a dictionary called states with state names as the key and the value should also be a dictionary with two keys 'cities' and 'population'.<br> The corresponding value related to 'cities' should be a list of the cities associated with the state. <br>\\nThe corresponding value associated with 'population' should be the total population of the state.<br>\\nA sample structure of states might look like this<br>\\n\\n```python\\nstates = {'Ohio':{'cities':['Cleveland','Columbus','Akron'],'population':3677756},{'New York':{'cities':['Buffalo','Rochester','Syracuse'],'population':5677756}}\\n```\", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Write your code below.\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 6, \"marks\": \"2\", \"qText\": \"What is the total population for the state California from the previous question.<br> Type in the number with out any commas or other characters.<br> For example 5890012\", \"qType\": \"3\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": null}}"]}