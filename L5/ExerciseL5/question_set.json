{"uid": "L5", "total": "20", "questions": ["{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 0, \"marks\": \"2\", \"qText\": \"Read the file excess_deaths.csv from the folder excess_deaths in the largedatasets folder. <br>\\nWrite a program that creates DataFrame with two columns country and max_deaths which has every country name and the maximum of death counts (from the deaths column) associated with the country. <br> Store the DataFrame in a variable maxDeathsCountry. \", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Type your code below\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 1, \"marks\": \"2\", \"qText\": \"Read the file excess_deaths.csv from the folder excess_deaths in the largedatasets folder. <br>\\nWrite a program that creates DataFrame with two columns country and total_deaths which has every country name and the total number of deaths (from the deaths column) associated with the country. <br> Store the DataFrame in a variable totalDeathsCountry. \", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Type your code below\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 2, \"marks\": \"5\", \"qText\": \"Read the file mask-use-by-county.csv from the folder mask-use-by-county in the largedatasets folder.<br>\\nRead the file county_complete.csv from county_complete in the large_datasets folder. <br>\\nMerge the two DataFrames together. <br>\\nNow find the average value for the mask use in ALWAYS category for each of the states.<br>\\nYour output should be a DataFrame containing two columns state and avg_always_mask_use.<br>\\nThe DataFrame should be stored in a variable called avgAlwaysState.\", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Type your code below\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 3, \"marks\": \"5\", \"qText\": \"The largedatasets folder contains the folder vaccine_data_oh_counties which has the Covid-19 vaccination details across all counties in Ohio arranged as daily uploads. <br>\\nCombine the files and create a single DataFrame containing the Recip_County (county name) and the percentage of people who have completed the series of vaccinations (Series_Complete_Pop_Pct). <br>\\nSort the DataFrame by Series_Complete_Pop_Pct in descending order and store it in a variable called countyVaccinationStatus\", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Type your code below\"}}", "{\"py/object\": \"helper.questionhelper.Question\", \"qid\": 4, \"marks\": \"6\", \"qText\": \"Similar to the previous question create the countyVaccinationStatus DataFrame.<br> \\nNow read the file oh_covid_death_data.csv in the oh_covid_death_data folder in largedatasets folder. <br>\\nCreate a DataFrame ohCountiesCovidDeaths which contains every county name and the corresponding total covid deaths. <br>\\nNow read in the population data for Counties in Ohio from pop_data.csv in pop_data folder in largedatasets.<br>\\nCombine ohCountiesCovidDeaths with population data to create a new DataFrame with county name and deaths normalized by population (deaths / population). <br> Now merge this dataset with the countyVaccinationStatus to create a new DataFrame called ohCovidVaccinationAndDeath which contains three columns (county_name,Series_Complete_Pop_Pct,death_normalized). <br>\\nSort the DataFrame with Series_Complete_Pop_Pct in descending order.  \", \"qType\": \"4\", \"qImageDetails\": null, \"results\": {\"options\": null, \"choice\": \"# Type your code below\"}}"]}